let apiUrl="http://localhost/desafio_revvo/src/CourseController.php?action=";document.addEventListener("DOMContentLoaded",()=>{let u={updateCourseModal:document.getElementById("updateCourseModal"),updateCourseForm:document.getElementById("update-course-form"),updateTitleInput:document.getElementById("updateCourseTitle"),updateDescriptionInput:document.getElementById("updateCourseDescription"),updateBannerInput:document.getElementById("updateCourseBanner"),updateCardImageInput:document.getElementById("updateCourseCardImage"),updateBannerPreview:document.getElementById("updateBannerPreview"),updateCardPreview:document.getElementById("updateCardPreview"),coursesContainer:document.getElementById("courses-container")},t=(window.fetchCourses=async()=>{try{var e=await(await fetch(apiUrl+"coursesGetRequest")).json();u.coursesContainer.innerHTML="",e.data.forEach(t),a()}catch(e){console.error("Erro ao buscar cursos:",e)}},e=>{var t=document.createElement("div");t.classList.add("col-md-3","d-flex"),t.innerHTML=`
            <div class="card">
                <img src="../src/${e.image}" class="card-img-top mx-auto d-block" alt="${e.title}" style="width: 300px; height: auto;">
                <div class="card-body position-relative">
                    <h5 class="card-title">${e.title}</h5>
                    <p class="card-text">${e.description}</p>
                    <a href="${e.link}" class="btn btn-primary">Ver mais</a>
                    <div class="dropdown position-absolute top-0 end-0 m-2">
                        <button class="btn dots btn-sm" type="button" id="dropdownMenuButton-${e.id}" data-bs-toggle="dropdown" aria-expanded="false">
                            <i class="bi bi-three-dots"></i>
                        </button>
                        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton-${e.id}">
                            <li><button class="dropdown-item btn-update-course" data-course-id='${e.id}'>Atualizar</button></li>
                            <li><button class="dropdown-item text-danger btn-delete-course" data-course-id='${e.id}'>Excluir</button></li>
                        </ul>
                    </div>
                </div>
            </div>
        `,u.coursesContainer.appendChild(t)}),a=()=>{var e;document.getElementById("add-new-course-btn-container")||((e=document.createElement("div")).id="add-new-course-btn-container",e.classList.add("col-md-3","d-flex"),e.innerHTML=`
            <button class="card border-dashed text-center w-100 justify-content-center align-items-center" data-bs-toggle="modal" data-bs-target="#createCourseModal" style="opacity: 0.3; border: 5px dashed #000; cursor: pointer;">
                <div class="card-body d-flex flex-column justify-content-center align-items-center" style="height: 100%;">
                    <i class="bi bi-folder-plus" style="font-size: 5rem;"></i>
                    <p class="card-text mt-2">Adicionar novo curso</p>
                </div>
            </button>
        `,u.coursesContainer.appendChild(e))},e=(e,t)=>{var a,e=e.files[0];e?((a=new FileReader).onload=e=>{t.src=e.target.result,t.style.display="block"},a.readAsDataURL(e)):t.style.display="none"},r=(u.updateBannerInput.addEventListener("change",()=>{e(u.updateBannerInput,u.updateBannerPreview)}),u.updateCardImageInput.addEventListener("change",()=>{e(u.updateCardImageInput,u.updateCardPreview)}),u.coursesContainer.addEventListener("click",async e=>{var t;e.target.classList.contains("btn-update-course")&&(t=e.target.dataset.courseId,t=t,t=await(await(await fetch(apiUrl+"coursesGetByIdRequest&id="+t)).json()).data,t=t,u.updateCourseForm.dataset.courseId=t.id,u.updateTitleInput.value=t.title,u.updateDescriptionInput.value=t.description,u.updateBannerPreview.style.display=t.banner?"block":"none",u.updateBannerPreview.src=t.banner?"../src/"+t.banner:"",u.updateCardPreview.style.display=t.image?"block":"none",u.updateCardPreview.src=t.image?"../src/"+t.image:"",new bootstrap.Modal(u.updateCourseModal).show()),e.target.classList.contains("btn-delete-course")&&(t=e.target.dataset.courseId,r(t))}),async e=>{if(confirm("Tem certeza que deseja excluir este curso?"))try{var t=await fetch(apiUrl+"coursesDeleteRequest",{method:"POST",body:new URLSearchParams({id:e})}),a=await t.json();t.ok?(alert("Curso excluído com sucesso!"),fetchCourses()):alert("Erro ao excluir curso: "+a.message)}catch(e){console.error("Erro ao excluir curso:",e)}}),c=(e,t="warning")=>{var a=document.getElementById("alert-placeholder-update"),r=document.createElement("div");r.className=`alert alert-${t} alert-dismissible fade show`,r.role="alert",r.innerHTML=`
        ${e}
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    `,a.appendChild(r)};u.updateCourseForm.addEventListener("submit",async e=>{e.preventDefault();var e=u.updateCourseForm.dataset.courseId,t=u.updateTitleInput.value.trim(),a=u.updateDescriptionInput.value.trim(),r=u.updateBannerInput.files[0],s=u.updateCardImageInput.files[0];if(n=a,o=r,d=s,t&&n?o?!!d||(c("Imagem é obrigatória."),!1):(c("Banner é obrigatório."),!1):(c("Título e descrição são obrigatórios."),!1)){var o,d,n=new FormData(u.updateCourseForm);n.append("id",e),n.append("title",t),n.append("description",a),n.append("banner",r),n.append("image",s);try{var i=await(await fetch(apiUrl+"coursesUpdateRequest",{method:"POST",body:n})).json();"success"===i.status?(c("Curso atualizado com sucesso!","success"),fetchCourses(),bootstrap.Modal.getInstance(u.updateCourseModal).hide()):c("Erro ao atualizar curso: "+i.message)}catch(e){console.error("Erro ao atualizar curso:",e),c("Erro inesperado ao atualizar curso. Tente novamente.")}}}),fetchCourses()});